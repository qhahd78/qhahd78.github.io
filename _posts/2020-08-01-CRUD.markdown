---
layout: post
title:  "CRUD #1,2"
date:   2020-08-02
categories: Javascript NodeJS
--- 
{%raw%}
### CRUD #1

  * Create
  * Read 
  * Update
  * Delete
  
## GET/POST
    
  * GET: 데이터를 'URL' 에 담아 보낸다.
        : 전송 길이에 제약이 있다. 
        : Caching 가능 --> 작업 속도 빠름 
        => 데이터 조회에 활용 
    
  * POST: Body에 담아 보낸다. 
         : 전송 길이에 제약이 없다. 
         : Caching 불가능
         =>데이터 생성에 활용

## CREATE 
  * 새로운 객체를 생성해 데이터를 저장 
  
  * 객체 생성 -> 입력 Data 저장 ->입력 Data 저장 

```python 

def create(request): 
    if request.method == 'POST': 
        post = Designer()
    #객체 생성 (메소드가 POST일 때만 해당.) 
        
        if 'image' in request.FILES: 
            post.image = request.FILES['image']
        #파일 체크     
            
        post.name = request.POST['name']
        post.address = request.POST['address']
        #입력 Data 저장 
        
        post.description = request.POST['description']
        

        post.save()
        #입력 Data 저장 

        return redirect('detail', post.id)
```

## UPDATE   
  * 정보 수정이 필요한 객체를 찾아 새로운 Data를 저장 
  
  * 객체 탐색 -> 입력 Data 저장 ->입력 Data 저장 

```python
def update(request, designer_id) : 
    get_object_or_404(Designer, pk = designer_id)
    
    if request.method == 'POST' : 
    #객체 탐색 
    
        if 'image' in request.FILES: 
            post.image = request.FILES['image']
        #파일 체크 
        
        post.name = request.POST['name']
        post.address = request.POST['address']
        #입력 Data 저장 
        
        post.description = request.POST['description']

        post.save()
        #입력 Data 저장 

        return redirect('detail', post.id)
        
    else: 
        return render(request, 'update.html', {'designer' : post})
    
```
## DELETE
  
  * 제거 해야할 객체를 찾아 삭제 
  
  * 객체 탐색 -> 객체 삭제 -> Home으로 이동 
 ```python 
 
def delete(request, designer_id): 
    get_object_or_404(Designer, pk = designer_id)
    #객체 탐색
    
    post.delete()
    #객체 삭제 

    return redirect('home')
    #Home으로 이동 

 ```
 ### CRUD#2
 
 ## Requirements: 패키지 종속성 관리 
  *패키지의 버전 확인 가능 
```bash
pip install -r requirements.txt 
pip freeze > requirements.txt

```
{%endraw%}
